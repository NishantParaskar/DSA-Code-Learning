import java.util.Arrays;

public class CorporateFlightBookings {
	
	 public static void main(String[] args) {
	        int[][] bookings = {{1, 2, 10}, {2, 3, 20}, {2, 5, 25}};
	        int n = 5;
	        int[] result = corpFlightBookings(bookings, n);
	        System.out.println("Final result: " + Arrays.toString(result));
	    }

	private static int[] corpFlightBookings(int[][] bookings, int n) {
	
		int[] seats = new int[n + 1]; // This array will hold the difference values
		for (int[] booking : bookings) {
		    int start = booking[0];
		    int end = booking[1];
		    int numSeats = booking[2];
		    
		    // Increment seats at the start index
		    seats[start - 1] += numSeats;
		    // Decrement seats at the end+1 index (if within bounds)
		    if (end < n) {
		        seats[end] -= numSeats;
		    }
		    
		    // Print the seats array after each booking
		    System.out.println("After booking " + Arrays.toString(booking) + ": " + Arrays.toString(seats));
		}
		
		System.out.println("==================================================");
		
		
		for (int i = 1; i < n; i++) {
		    seats[i] += seats[i - 1]; // Update seats[i] to include the previous value
		    // Print the array after each step to show the cumulative sum
		    System.out.println("After processing index " + i + ": " + Arrays.toString(seats));
		}
		
		
		int[] result = new int[n];
		System.arraycopy(seats, 0, result, 0, n);
		
		
		return null;
	}

}


//https://leetcode.com/problems/corporate-flight-bookings/
//https://getsdeready.com/courses/design-dsa-combined/lesson/corporate-flight-bookings-2/
import java.lang.reflect.Array;
import java.util.Arrays;

public class AggressiveCows {

	public static void main(String[] args) {
        int[] stalls = {0, 3, 4, 7, 10, 9};
        int k = 4;

		int output = AggressiveCowsMaxofMin(stalls, k);

		System.out.println("The output is :" + output);
	}

	private static int AggressiveCowsMaxofMin(int[] stalls, int k) {
		int n = stalls.length;

		Arrays.sort(stalls); // sorrted

		int low = 1;
		int high = stalls[n - 1] - stalls[0]; // not properly understood check
												// later

		int ans = -1;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (possibleTPlace(stalls, mid, k) == true) {
				// ans = mid ; // save it and check for the maximum possible
				// distance
				low = mid + 1; //

			} else {
				high = mid - 1;
			}

		}

		return high;
	}
	  
	static boolean canWePlace((int stalls[], int distance, int cow) {
		 Arrays.sort(stalls);
		int n = stalls.length;
		int numberofCowsPlace = 1; // no. of cows placed
		int lastCowPlace = stalls[0]; // position of last placed cow.

		for (int checkPlacement = 1; checkPlacement < n; checkPlacement++) {

			if (stalls[checkPlacement] - lastCowPlace >= distance) {
				numberofCowsPlace++; // place next cow.
				lastCowPlace = checkPlacement; // update the last location.

			}
			if (numberofCowsPlace >= cow) {
				return true;
			}
		}
		return false;

	}

	

}
